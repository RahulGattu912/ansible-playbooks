- name: create ec2 and r53 records
  connection: local
  hosts: local
  vars:
    subnet_id: subnet-0c166134bc5100902
    security_group: sg-061fd314500b76b77
    ami_id: ami-09c813fb71547fc4f
    instance_type: t2.micro
    zone: learndevops.online
    instances:
      - mysql
      - frontend
      - backend
  tasks:
    - name: install AWS boto3 and botocore
      ansible.builtin.pip:
        name: "{{ item }}"
        executable: pip3.9
      loop:
        - boto3
        - botocore

    - name: create ec2 instance
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        subnet_id: "{{ subnet_id }}"
        security_group: "{{ security_group }}"
        image_id: "{{ ami_id }}"
        instance_type: "{{ instance_type }}"
      loop: "{{ instances }}"
      register: ec2_info

    # - name: print ec2_info
    #   ansible.builtin.debug:
    #     msg: "{{ ec2_info }}"

    - name: print private ip addresses
      ansible.builtin.debug:
        msg: "{{ item.instances[0].private_ip_address }}"
      loop: "{{ ec2_info.results }}"

    - name: create private ip route53 records
      amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ item.item}}.{{ zone }}"
        type: A
        ttl: 1
        value: "{{ item.instances[0].private_ip_address }}"
        wait: true
        overwrite: true
      loop: "{{ ec2_info.results }}"

    - name: create public ip for frontend route53 record
      amazon.aws.route53:
        state: present
        zone: "{{ zone }}"
        record: "{{ zone }}"
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip_address }}"
        wait: true
        overwrite: true
      loop: "{{ ec2_info.results }}"
      when: item.item == "frontend"
